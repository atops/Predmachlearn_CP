{
    "contents" : "library(caret)\nlibrary(ggbiplot)\nlibrary(dplyr)\nlibrary(magrittr)\nlibrary(GGally)\n#library(scatterplot3d)\nlibrary(rgl)\n\nlibrary(kernlab)\nlibrary(pls)\n\n# --- CONSTANTS ----\nset.seed(1000)\ntraining_filename <- \"~/Dropbox/Coursera/Predmachlearn_CP/pml-training.csv\"\ntesting_filename <- \"~/Dropbox/Coursera/Predmachlearn_CP/pml-testing.csv\"\n\n# --- EXPLORATORY FUNCTIONS ----\n\n# Plot 3 variables to see if PCA would reduce dimensionality\n# df[data.frame], c[string] -> plot\npcaplot <-function(df, c) {\n        tr_pca <- prcomp(select(df, contains(c)), \n                         center=TRUE, \n                         scale.=TRUE)\n        ggbiplot(tr_pca, \n                 obs.scale = 1, \n                 var.scale = 1,\n                 groups = df$classe, \n                 ellipse = TRUE, \n                 circle = TRUE) +\n                scale_color_discrete(name = '') +\n                theme(legend.direction = 'horizontal', \n                      legend.position = 'top')\n        \n}\n\n# Find and plot a heatmap of correlations between all numeric variables\n# df[data.frame] -> list(matrix, heatmap)\ncorplot <- function(df) {\n        tr_nofactor <- dplyr::select(df, -c(classe, user_name))\n        cm <- cor(tr_nofactor)\n        hm <- heatmap(cm, Rowv=NA, Colv=NA, col=heat.colors(256), scale=\"column\", margins=c(5,10))\n        list(cm, hm)\n}\n\n# Create a rotating 3d plot of the first 3 columns containing c\n# df[data.frame], c[string] -> plot\nxyzplot <- function(df, c) {\n        n <- names(df)\n        xyz <- n[grepl(c, n)]\n        x <- df[[xyz[1]]]\n        y <- df[[xyz[2]]]\n        z <- df[[xyz[3]]]\n        plot3d(x, y, z,\n               type=\"s\",\n               col=as.numeric(df$classe))\n}\n\n# Create a pairs plot showing more than just scatterplots\n# df[data.frame], c[string] -> plot\nfancypairs <- function(df, c) {\n        ggpairs(dplyr::select(df, classe, user_name, contains(c)),\n                diag=list(continuous=\"density\", discrete=\"bar\"), \n                upper=list(continuous=\"density\", discrete=\"bar\", mixed=\"box\"),\n                color=\"classe\")\n}\n\n# Create a series of boxplots of variables, c, against classe\n# df[data.frame], c[string] -> plot\nboxplots <- function(df, c) {\n        x <- dplyr::select(df, classe, contains(c))\n        xtall <- gather(x, \"meas\",\"val\",-classe)\n        qplot(x=classe, y=val, data=xtall) + geom_boxplot() + facet_wrap(~meas, scales=\"free\")\n}\n\n\n# EXPLORE THE DATA\ntraining <- read.csv(training_filename)\ntesting <- read.csv(testing_filename)\n\n# Select covariates with full range of data -------\ntrdf <- training %>%\n        dplyr::select(classe,\n                      user_name,\n                      gyros_belt_x,     accel_belt_x,     magnet_belt_x, \n                      gyros_belt_y,     accel_belt_y,     magnet_belt_y, \n                      gyros_belt_z,     accel_belt_z,     magnet_belt_z, \n                      gyros_arm_x,      accel_arm_x,      magnet_arm_x, \n                      gyros_arm_y,      accel_arm_y,      magnet_arm_y, \n                      gyros_arm_z,      accel_arm_z,      magnet_arm_z, \n                      gyros_dumbbell_x, accel_dumbbell_x, magnet_dumbbell_x, \n                      gyros_dumbbell_y, accel_dumbbell_y, magnet_dumbbell_y, \n                      gyros_dumbbell_z, accel_dumbbell_z, magnet_dumbbell_z, \n                      gyros_forearm_x,  accel_forearm_x,  magnet_forearm_x,\n                      gyros_forearm_y,  accel_forearm_y,  magnet_forearm_y,\n                      gyros_forearm_z,  accel_forearm_z,  magnet_forearm_z,\n                      total_accel_belt,\n                      total_accel_arm,\n                      total_accel_dumbbell,\n                      total_accel_forearm,\n                      roll_dumbbell,  roll_forearm,  roll_arm,\n                      pitch_dumbbell, pitch_forearm, pitch_arm,\n                      yaw_dumbbell,   yaw_forearm,   yaw_arm)\n\n# Remove outliers\ntrdf %<>% filter(accel_belt_x > -100 & \n                         gyros_dumbbell_x > -200 & \n                         gyros_forearm_x > -20 &\n                         gyros_dumbbell_y < 40 &\n                         magnet_dumbbell_y > -1000 &\n                         gyros_forearm_y < 300 &\n                         accel_forearm_y < 750 &\n                         gyros_dumbbell_z < 300 &\n                         gyros_forearm_z < 200 &\n                         total_accel_dumbbell < 50 &\n                         total_accel_forearm < 90)\n\n# Plot covariates\ncorplot(trdf)[[1]]\n\npcaplot(trdf, \"accel_belt\")\npcaplot(trdf, \"magnet_belt\")\npcaplot(trdf, \"magnet_arm\")\npcaplot(trdf, \"magnet_dumbbell\")\n\nxyzplot(trdf, \"accel_belt\")\nxyzplot(trdf, \"magnet_belt\")\nxyzplot(trdf, \"magnet_arm\")\nxyzplot(trdf, \"magnet_dumbbell\")\n\nboxplots(trdf, \"_x\")\nboxplots(trdf, \"_y\")\nboxplots(trdf, \"_z\")\nboxplots(trdf, \"total_accel\")\n\n# variant on selection for fancypairs\nfancypairs(trdf, \"_x\")\nfancypairs(trdf, \"_y\")\nfancypairs(trdf, \"_z\")\nfancypairs(dplyr::select(trdf, \n                         classe, \n                         user_name, \n                         contains(\"roll_\"), contains(\"pitch_\"), contains(\"yaw_\")), \n           \"_\")\n\n# --- PRE-PROCESSING ----\n\n### ---- NEED TO DO SOME TRANSFORMS ON THE DATA, SUCH AS TRAJECTORY, VELOCITY, ACCELERATION\n\nnzv <- nearZeroVar(training19619)\nnames(training)[nzv]\n# this was null.\n\n\n#dv <- dummyVars(~user_name, data=training)\n#dv <- data.frame(predict(dv, newdata=training), training19622)\n\n# -- TRAIN ----\n\ntc0 <- trainControl(method=\"repeatedcv\", \n                   number=10, \n                   repeats=10,\n                   classProbs=TRUE,\n                   allowParallel=TRUE)\ntrfit0 <- train(classe ~ .,\n               data=trdf,\n               trControl=tc0,\n               method=\"pls\")\ncm <- confusionMatrix(trfit0)\nheatmap(cm$table, Rowv=NA, Colv=NA)\n\n# Simple possible model\nptm <- proc.time()\ntc <- trainControl(method=\"repeatedcv\", \n                   number=10, \n                   repeats=10,\n                   classProbs=TRUE,\n                   allowParallel=TRUE)\ntrfit <- train(classe ~ roll_dumbbell + \n                       magnet_arm_y + \n                       magnet_dumbbell_y + \n                       magnet_forearm_y +\n                       accel_belt_z +\n                       magnet_belt_x +\n                       magnet_belt_y +\n                       magnet_belt_z,\n               data=trdf,\n               trControl=tc,\n               method=\"rf\")\nproc.time() - ptm\ncm <- confusionMatrix(trfit)\ncm\nheatmap(cm$table, Rowv=NA, Colv=NA)\n\nplot(trfit)\n\nprd <- predict(trfit, newdata=testing)\n\n# Train ------------------------\n\n",
    "created" : 1439578265100.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "20|27|34|0|\n38|25|43|0|\n47|28|56|0|\n60|31|65|0|\n69|29|73|0|\n",
    "hash" : "627746393",
    "id" : "2870BBE3",
    "lastKnownWriteTime" : 1439763854,
    "path" : "~/Dropbox/Coursera/Predmachlearn_CP/pml.R",
    "project_path" : "pml.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}